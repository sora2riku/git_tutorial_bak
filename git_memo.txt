==================
変更をステージに追加する
==================
ワークツリーからステージに変更を加える
git add ファイル名
git add フォルダ名
git add.


==================
GitHubからクローンしてみる
==================

githubにて「クローンまたはダウンロード」ボタンを押す
URLが表示されるのコピーする

ローカルでgitbash起動
任意のフォルダーに移動

コマンド実行
git clone  URL貼り付ける

コピーが開始される

ファイルを確認
ls -a

==================
リポジトリ作成
==================

ディレクトリを移動しよう

下記コマンド実行
git init
.gitフォルダーが作成される

ディレクトリの中身を確認しよう
ls -a

-a:allの意味

.gitの.は隠しファイルということを表している

.gitフォルダーの中を確認する
ls .git/

:hooks/
:info/
:objects/	リポジトリ本体
:refs/
:config		設定ファイル
:description
:HEAD


==================
GITHUBのメモ
==================


ターミナルの頻出コマンドについてまとめます。
Gitはターミナルで作業するので、その時に絶対に覚えておいてほしいコマンドだけまとめます。

cdコマンド

ディレクトリを移動します。

lsコマンド

ディレクトリの内容を表示します。 ls -a コマンドで、隠しファイルを含めたディレクトリ全内容を表示します。

mkdirコマンド

ディレクトリを新規作成します。

rmコマンド

ファイルを削除します。

cpコマンド

ファイルをコピーします。

mvコマンド

ファイルの移動とファイル名の変更を行います。

catコマンド

ファイルの中身を表示します。


=====================================
githubに登録したのちにローカル環境設定

gitbash使う

git config --global user.name "githubのユーザー名"
git config --global user.email githubに登録した@メールアドレス
git config --global core.editor "atom --wait"  #使用するエディター登録　入力例はAtom

設定確認（個別）
git config user.name
git config user.email
git config core.editor

設定確認（まとめて）
git config --list


設定ファイルの内容確認（うまく動作しなかったけどコマンドはメモしておく)
cat ~/.gitconfig


=====================================
非公開で使用したいならgitbucketが無料らしい
githubは非公開にするのは有料
